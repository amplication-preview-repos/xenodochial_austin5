/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ContractorAssignmentCreateNestedManyWithoutProjectStagesInput } from "./ContractorAssignmentCreateNestedManyWithoutProjectStagesInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsInt,
  Min,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { PositionRequirementCreateNestedManyWithoutProjectStagesInput } from "./PositionRequirementCreateNestedManyWithoutProjectStagesInput";
import { ProjectWhereUniqueInput } from "../../project/base/ProjectWhereUniqueInput";

@InputType()
class ProjectStageCreateInput {
  @ApiProperty({
    required: false,
    type: () => ContractorAssignmentCreateNestedManyWithoutProjectStagesInput,
  })
  @ValidateNested()
  @Type(() => ContractorAssignmentCreateNestedManyWithoutProjectStagesInput)
  @IsOptional()
  @Field(() => ContractorAssignmentCreateNestedManyWithoutProjectStagesInput, {
    nullable: true,
  })
  contractorAssignments?: ContractorAssignmentCreateNestedManyWithoutProjectStagesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PositionRequirementCreateNestedManyWithoutProjectStagesInput,
  })
  @ValidateNested()
  @Type(() => PositionRequirementCreateNestedManyWithoutProjectStagesInput)
  @IsOptional()
  @Field(() => PositionRequirementCreateNestedManyWithoutProjectStagesInput, {
    nullable: true,
  })
  positionRequirements?: PositionRequirementCreateNestedManyWithoutProjectStagesInput;

  @ApiProperty({
    required: false,
    type: () => ProjectWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProjectWhereUniqueInput)
  @IsOptional()
  @Field(() => ProjectWhereUniqueInput, {
    nullable: true,
  })
  project?: ProjectWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  stageNumber?: number | null;
}

export { ProjectStageCreateInput as ProjectStageCreateInput };
