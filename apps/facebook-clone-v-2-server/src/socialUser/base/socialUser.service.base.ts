/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SocialUser as PrismaSocialUser } from "@prisma/client";

export class SocialUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SocialUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.socialUser.count(args);
  }

  async socialUsers(
    args: Prisma.SocialUserFindManyArgs
  ): Promise<PrismaSocialUser[]> {
    return this.prisma.socialUser.findMany(args);
  }
  async socialUser(
    args: Prisma.SocialUserFindUniqueArgs
  ): Promise<PrismaSocialUser | null> {
    return this.prisma.socialUser.findUnique(args);
  }
  async createSocialUser(
    args: Prisma.SocialUserCreateArgs
  ): Promise<PrismaSocialUser> {
    return this.prisma.socialUser.create(args);
  }
  async updateSocialUser(
    args: Prisma.SocialUserUpdateArgs
  ): Promise<PrismaSocialUser> {
    return this.prisma.socialUser.update(args);
  }
  async deleteSocialUser(
    args: Prisma.SocialUserDeleteArgs
  ): Promise<PrismaSocialUser> {
    return this.prisma.socialUser.delete(args);
  }
}
